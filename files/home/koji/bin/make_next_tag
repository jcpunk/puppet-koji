#!/bin/bash
####################################################
# HEADER: This file was autogenerated by puppet.
#
# FILE: modules/koji/files/root/bin/make_next_tag
#
# /home/koji/bin/make_next_tag file for machine [<%= fqdn %>]
#
#####################################################

# setup args in the right order for making getopt evaluation
# nice and easy.  You'll need to read the manpages for more info
args=$(getopt -o hp:m:s -- "$@")
eval set -- "$args"

usage() {
    echo "$0: [-h] [-m macro package] [-p previous tag] tagname" >&2
    echo '' >&2
    echo ' -m: What is the name of your buildsys macro rpm for this tag' >&2
    echo '     If you set this to NONE the step will be skipped' >&2
    echo ' -p: Tag should this one inherit?' >&2
    echo '     If you set this to NONE the step will be skipped' >&2
    echo ' -s: Do not make an "updates" tag as well' >&2
    echo '' >&2
    echo ' This is simply a wrapper around these commands' >&2
    echo '' >&2

    echo '###################################' >&2
    echo 'koji add-tag ${TAG_NAME}' >&2
    echo 'koji add-tag-inheritance --priority=80 ${TAG_NAME} My_Linux' >&2
    echo 'koji add-tag --parent $TAG_NAME --arches "x86_64,i686" ${TAG_NAME}-build' >&2
    echo 'koji add-tag-inheritance --priority=80 ${TAG_NAME}-build My_Linux-build' >&2
    echo 'koji add-group ${TAG_NAME}-build build' >&2
    echo 'koji add-group-pkg ${TAG_NAME}-build build ${MACRO_PACKAGE}' >&2
    echo 'koji add-target ${TAG_NAME} ${TAG_NAME}-build ${TAG_NAME}' >&2
    echo 'koji add-tag-inheritance --noconfig --priority=20 ${TAG_NAME} ${PREVIOUS_TAG}' >&2
    echo 'koji add-tag-inheritance --noconfig --priority=20 ${TAG_NAME}-build ${PREVIOUS_TAG}-build' >&2
    echo '###################################' >&2
    echo '' >&2
    exit 1
}

SINGLE='False'
for arg in $@; do
    case $1 in
        -- )
            # end of getopt args, shift off the -- and get out of the loop
            shift
            break 2
           ;;
         -m )
            # Set the macro package
            MACRO_PACKAGE=$2
            shift 2
           ;;
         -p )
            # Set the previous Tag
            PREVIOUS_TAG=$2
            shift 2
           ;;
         -s )
            # Set to single tag only
            SINGLE='True'
            shift
           ;;
         -h )
            # get help
            usage
           ;;
    esac
done

TAG_NAME=$1

if [[ "x${TAG_NAME}" == 'x' ]]; then
    echo '' >&2
    echo "No TAG NAME" >&2
    echo '' >&2
    usage
fi
if [[ "x${MACRO_PACKAGE}" == 'x' ]]; then
    echo '' >&2
    echo "No MACRO PACKAGE" >&2
    echo "  Did you want NONE?" >&2
    echo '' >&2
    usage
fi
if [[ "x${PREVIOUS_TAG}" == 'x' ]]; then
    echo '' >&2
    echo "No PREVIOUS TAG" >&2
    echo "  Did you want NONE?" >&2
    echo '' >&2
    usage
fi

koji list-tags |grep 'My_Linux' >/dev/null 2>&1
if [[ $? -ne 0 ]]; then
    echo "Looks like we don't have the initial tags" >&2
    echo "So I'm doing nothing" >&2
    exit 1
fi
koji list-tags |grep 'My_Linux-build' >/dev/null 2>&1
if [[ $? -ne 0 ]]; then
    echo "Looks like we don't have the initial tags" >&2
    echo "So I'm doing nothing" >&2
    exit 1
fi

if [[ "$PREVIOUS_TAG" != 'NONE' ]]; then
    koji list-tags |grep ${PREVIOUS_TAG} >/dev/null 2>&1
    if [[ $? -ne 0 ]]; then
        echo "Looks like we don't have the previous tag" >&2
        echo "Missing ${PREVIOUS_TAG}" >&2
        exit 1
    fi
fi

koji list-tags |grep ${TAG_NAME} >/dev/null 2>&1
if [[ $? -eq 0 ]]; then
    echo "Looks like we have already have ${TAG_NAME}" >&2
    exit 1
fi

for suffix in build updates updates-build; do
    koji list-tags |grep ${TAG_NAME}-${suffix} >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo "Looks like we have already have ${TAG_NAME}-suffix" >&2
        exit 1
    fi
done

ALL_TAGS="${TAG_NAME}"
if [[ "${SINGLE}" == 'False' ]]; then
    ALL_TAGS="${TAG_NAME} ${TAG_NAME}-updates"
fi

for thistag in ${ALL_TAGS}; do
    # This gives you a 'no frills' tag base
    koji add-tag ${thistag}
    koji add-tag-inheritance --priority=80 ${thistag} My_Linux

    # This gives you a 'no frills' tag base for building
    koji add-tag --parent ${thistag} --arches "x86_64,i686" ${thistag}-build
    koji add-tag-inheritance --priority=80 ${thistag}-build My_Linux-build

    # This is where you add your macro package
    if [[ "$MACRO_PACKAGE" != 'NONE' ]]; then
        koji add-group ${thistag}-build build
        koji add-group-pkg ${thistag}-build build ${MACRO_PACKAGE}
    fi

    # This target has the same name as the tag, but isn't the tag
    # it is what you tell koji to build against
    koji add-target ${thistag} ${thistag}-build ${thistag}
done

# these will pull in all packages built under the ${PREVIOUS_TAG}
if [[ "$PREVIOUS_TAG" != 'NONE' ]]; then
    koji add-tag-inheritance --noconfig --priority=20 ${TAG_NAME} ${PREVIOUS_TAG}
    koji add-tag-inheritance --noconfig --priority=20 ${TAG_NAME}-build ${PREVIOUS_TAG}-build
fi

if [[ "${SINGLE}" == 'False' ]]; then
    koji add-tag-inheritance --noconfig --priority=20 ${TAG_NAME}-updates ${TAG_NAME}
    koji add-tag-inheritance --noconfig --priority=20 ${TAG_NAME}-updates-build ${TAG_NAME}-build
    koji regen-repo --nowait ${TAG_NAME}-updates-build
fi

koji regen-repo --nowait ${TAG_NAME}-build

